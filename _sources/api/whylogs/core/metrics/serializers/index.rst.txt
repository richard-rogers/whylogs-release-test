:py:mod:`whylogs.core.metrics.serializers`
==========================================

.. py:module:: whylogs.core.metrics.serializers


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   whylogs.core.metrics.serializers.Serializer
   whylogs.core.metrics.serializers.SerializerRegistry



Functions
~~~~~~~~~

.. autoapisummary::

   whylogs.core.metrics.serializers.get_serializer
   whylogs.core.metrics.serializers.serializer



Attributes
~~~~~~~~~~

.. autoapisummary::

   whylogs.core.metrics.serializers.M
   whylogs.core.metrics.serializers.NUM


.. py:data:: M

   

.. py:data:: NUM

   

.. py:class:: Serializer(*, func: whylogs.core.metrics.decorators.FuncType, name: str)

   Bases: :py:obj:`whylogs.core.metrics.decorators.DecoratedFunction`, :py:obj:`Generic`\ [\ :py:obj:`M`\ ]

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:property:: name
      :type: str


   .. py:method:: build(func: whylogs.core.metrics.decorators.FuncType, name: str) -> Serializer
      :classmethod:



.. py:class:: SerializerRegistry

   .. py:method:: get(*, mtype: Optional[type] = None, type_id: int = 0) -> Optional[Serializer]



.. py:function:: get_serializer(*, mtype: Optional[type] = None, type_id: int = 0, registry: Optional[SerializerRegistry] = None) -> Optional[Serializer]


.. py:function:: serializer(*, type_id: int, registry: Optional[SerializerRegistry] = None)


